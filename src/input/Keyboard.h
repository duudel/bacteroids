
#ifndef h_ROB_KEYBOARD_H
#define h_ROB_KEYBOARD_H

#include "../Types.h"
#include <SDL2/SDL_keycode.h>

namespace rob
{

    enum class KeyMod : uint32_t
    {
        None = KMOD_NONE,
        LShift = KMOD_LSHIFT,
        RShift = KMOD_RSHIFT,
        LCtrl = KMOD_LCTRL,
        RCtrl = KMOD_RCTRL,
        LAlt = KMOD_LALT,
        RAlt = KMOD_RALT,
        LGui = KMOD_LGUI,
        RGui = KMOD_RGUI,
        Num = KMOD_NUM,
        Caps = KMOD_CAPS,
        Mode = KMOD_MODE
    };

    enum class Key : uint32_t
    {
        Unknown = SDLK_UNKNOWN,

        Return = SDLK_RETURN,
        Escape = SDLK_ESCAPE,
        Backspace = SDLK_BACKSPACE,
        Tab = SDLK_TAB,
        Space = SDLK_SPACE,
        Exclaim = SDLK_EXCLAIM,
        QuoteDbl = SDLK_QUOTEDBL,
        Hash = SDLK_HASH,
        Percent = SDLK_PERCENT,
        Dollar = SDLK_DOLLAR,
        Ampersand = SDLK_AMPERSAND,
        Quote = SDLK_QUOTE,
        LParen = SDLK_LEFTPAREN,
        RParen = SDLK_RIGHTPAREN,
        Asterisk = SDLK_ASTERISK,
        Plus = SDLK_PLUS,
        Comma = SDLK_COMMA,
        Minus = SDLK_MINUS,
        Period = SDLK_PERIOD,
        Slash = SDLK_SLASH,
        Num0 = SDLK_0,
        Num1 = SDLK_1,
        Num2 = SDLK_2,
        Num3 = SDLK_3,
        Num4 = SDLK_4,
        Num5 = SDLK_5,
        Num6 = SDLK_6,
        Num7 = SDLK_7,
        Num8 = SDLK_8,
        Num9 = SDLK_9,
        Colon = SDLK_COLON,
        Semicolon = SDLK_SEMICOLON,
        Less = SDLK_LESS,
        Equals = SDLK_EQUALS,
        Greater = SDLK_GREATER,
        Question = SDLK_QUESTION,
        At = SDLK_AT,
        /*
           Skip uppercase letters
         */
        LBracket = SDLK_LEFTBRACKET,
        Backslash = SDLK_BACKSLASH,
        RBracket = SDLK_RIGHTBRACKET,
        Caret = SDLK_CARET,
        Underscore = SDLK_UNDERSCORE,
        BackQuote = SDLK_BACKQUOTE,
        A = SDLK_a,
        B = SDLK_b,
        C = SDLK_c,
        D = SDLK_d,
        E = SDLK_e,
        F = SDLK_f,
        G = SDLK_g,
        H = SDLK_h,
        I = SDLK_i,
        J = SDLK_j,
        K = SDLK_k,
        L = SDLK_l,
        M = SDLK_m,
        N = SDLK_n,
        O = SDLK_o,
        P = SDLK_p,
        Q = SDLK_q,
        R = SDLK_r,
        S = SDLK_s,
        T = SDLK_t,
        U = SDLK_u,
        V = SDLK_v,
        W = SDLK_w,
        X = SDLK_x,
        Y = SDLK_y,
        Z = SDLK_z,

        CapsLock = SDLK_CAPSLOCK,

        F1 = SDLK_F1,
        F2 = SDLK_F2,
        F3 = SDLK_F3,
        F4 = SDLK_F4,
        F5 = SDLK_F5,
        F6 = SDLK_F6,
        F7 = SDLK_F7,
        F8 = SDLK_F8,
        F9 = SDLK_F9,
        F10 = SDLK_F10,
        F11 = SDLK_F11,
        F12 = SDLK_F12,

        PrintScreen = SDLK_PRINTSCREEN,
        ScrollLock = SDLK_SCROLLLOCK,
        Pause = SDLK_PAUSE,
        Insert = SDLK_INSERT,
        Home = SDLK_HOME,
        PageUp = SDLK_PAGEUP,
        Delete = SDLK_DELETE,
        End = SDLK_END,
        PageDown = SDLK_PAGEDOWN,
        Right = SDLK_RIGHT,
        Left = SDLK_LEFT,
        Down = SDLK_DOWN,
        Up = SDLK_UP,

        NumLockClear = SDLK_NUMLOCKCLEAR,
        Kp_Divide = SDLK_KP_DIVIDE,
        Kp_Multiply = SDLK_KP_MULTIPLY,
        Kp_Minus = SDLK_KP_MINUS,
        Kp_Plus = SDLK_KP_PLUS,
        Kp_Enter = SDLK_KP_ENTER,
        Kp_1 = SDLK_KP_1,
        Kp_2 = SDLK_KP_2,
        Kp_3 = SDLK_KP_3,
        Kp_4 = SDLK_KP_4,
        Kp_5 = SDLK_KP_5,
        Kp_6 = SDLK_KP_6,
        Kp_7 = SDLK_KP_7,
        Kp_8 = SDLK_KP_8,
        Kp_9 = SDLK_KP_9,
        Kp_0 = SDLK_KP_0,
        Kp_Period = SDLK_KP_PERIOD,

        App = SDLK_APPLICATION,
        POwer = SDLK_POWER,
        Kp_Equals = SDLK_KP_EQUALS,
        F13 = SDLK_F13,
        F14 = SDLK_F14,
        F15 = SDLK_F15,
        F16 = SDLK_F16,
        F17 = SDLK_F17,
        F18 = SDLK_F18,
        F19 = SDLK_F19,
        F20 = SDLK_F20,
        F21 = SDLK_F21,
        F22 = SDLK_F22,
        F23 = SDLK_F23,
        F24 = SDLK_F24,
        Execute = SDLK_EXECUTE,
        Help = SDLK_HELP,
        Menu = SDLK_MENU,
        Select = SDLK_SELECT,
        Stop = SDLK_STOP,
        Again = SDLK_AGAIN,
        Undo = SDLK_UNDO,
        Cut = SDLK_CUT,
        Copy = SDLK_COPY,
        Paste = SDLK_PASTE,
        Find = SDLK_FIND,
        Mute = SDLK_MUTE,
        VolumeUp = SDLK_VOLUMEUP,
        VolumeDown = SDLK_VOLUMEDOWN,
        Kp_Comma = SDLK_KP_COMMA,
        Kp_EqualsAs400 = SDLK_KP_EQUALSAS400,

        AltErase = SDLK_ALTERASE,
        SysReq = SDLK_SYSREQ,
        Cancel = SDLK_CANCEL,
        Clear = SDLK_CLEAR,
        Prior = SDLK_PRIOR,
        Return2 = SDLK_RETURN2,
        Separator = SDLK_SEPARATOR,
        Out = SDLK_OUT,
        Oper = SDLK_OPER,
        ClearAgain = SDLK_CLEARAGAIN,
        CrSel = SDLK_CRSEL,
        ExSel = SDLK_EXSEL,

        Kp_00 = SDLK_KP_00,
        Kp_000 = SDLK_KP_000,
        ThousandSep = SDLK_THOUSANDSSEPARATOR,
        DecimalSep = SDLK_DECIMALSEPARATOR,
        CurrencyUnit = SDLK_CURRENCYUNIT,
        CurrencySubUnit = SDLK_CURRENCYSUBUNIT,
        Kp_LParen = SDLK_KP_LEFTPAREN,
        Kp_RParen = SDLK_KP_RIGHTPAREN,
        Kp_LBrace = SDLK_KP_LEFTBRACE,
        Kp_RBrace = SDLK_KP_RIGHTBRACE,
        Kp_Tab = SDLK_KP_TAB,
        Kp_Backspace = SDLK_KP_BACKSPACE,
        Kp_A = SDLK_KP_A,
        Kp_B = SDLK_KP_B,
        Kp_C = SDLK_KP_C,
        Kp_D = SDLK_KP_D,
        Kp_E = SDLK_KP_E,
        Kp_F = SDLK_KP_F,
        Kp_Xor = SDLK_KP_XOR,
        Kp_Power = SDLK_KP_POWER,
        Kp_Percent = SDLK_KP_PERCENT,
        Kp_Less = SDLK_KP_LESS,
        Kp_Greater = SDLK_KP_GREATER,
        Kp_Ampersand = SDLK_KP_AMPERSAND,
        Kp_DblAmpersand = SDLK_KP_DBLAMPERSAND,
        Kp_VerticalBar = SDLK_KP_VERTICALBAR,
        Kp_DblVerticalBar = SDLK_KP_DBLVERTICALBAR,
        Kp_Colon = SDLK_KP_COLON,
        Kp_Hash = SDLK_KP_HASH,
        Kp_Space = SDLK_KP_SPACE,
        Kp_At = SDLK_KP_AT,
        Kp_Exclam = SDLK_KP_EXCLAM,
        Kp_MemStore = SDLK_KP_MEMSTORE,
        Kp_MemRecall = SDLK_KP_MEMRECALL,
        Kp_MemClear = SDLK_KP_MEMCLEAR,
        Kp_MemAdd = SDLK_KP_MEMADD,
        Kp_MemSubtract = SDLK_KP_MEMSUBTRACT,
        Kp_MemMultiply = SDLK_KP_MEMMULTIPLY,
        Kp_MemDivide = SDLK_KP_MEMDIVIDE,
        Kp_PlusMinus = SDLK_KP_PLUSMINUS,
        Kp_Clear = SDLK_KP_CLEAR,
        Kp_ClearEntry = SDLK_KP_CLEARENTRY,
        Kp_Binary = SDLK_KP_BINARY,
        Kp_Octal = SDLK_KP_OCTAL,
        Kp_Decimal = SDLK_KP_DECIMAL,
        Kp_Hexadecimal = SDLK_KP_HEXADECIMAL,

        LCtrl = SDLK_LCTRL,
        LShift = SDLK_LSHIFT,
        LAlt = SDLK_LALT,
        LGui = SDLK_LGUI,
        RCtrl = SDLK_RCTRL,
        RShift = SDLK_RSHIFT,
        RAlt = SDLK_RALT,
        RGui = SDLK_RGUI,

        Mode = SDLK_MODE,

        AudioNext = SDLK_AUDIONEXT,
        AudioPrev = SDLK_AUDIOPREV,
        AudioStop = SDLK_AUDIOSTOP,
        AudioPlay = SDLK_AUDIOPLAY,
        AudioMute = SDLK_AUDIOMUTE,
        MediaSelect = SDLK_MEDIASELECT,
        WWW = SDLK_WWW,
        Mail = SDLK_MAIL,
        Calculator = SDLK_CALCULATOR,
        Computer = SDLK_COMPUTER,
        Ac_Search = SDLK_AC_SEARCH,
        Ac_Home = SDLK_AC_HOME,
        Ac_Back = SDLK_AC_BACK,
        Ac_Forward = SDLK_AC_FORWARD,
        Ac_Stop = SDLK_AC_STOP,
        Ac_Refresh = SDLK_AC_REFRESH,
        Ac_Boockmarks = SDLK_AC_BOOKMARKS,

        BrightnessDown = SDLK_BRIGHTNESSDOWN,
        BrightnessUp = SDLK_BRIGHTNESSUP,
        DisplaySwitch = SDLK_DISPLAYSWITCH,
        KbIllumToggle = SDLK_KBDILLUMTOGGLE,
        KbIllumDown = SDLK_KBDILLUMDOWN,
        KbIllumUp = SDLK_KBDILLUMUP,
        Eject = SDLK_EJECT,
        Sleep = SDLK_SLEEP
    };

} // rob

#endif // h_ROB_KEYBOARD_H

